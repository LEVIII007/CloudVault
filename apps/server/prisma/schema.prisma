// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  folders       Folder[]  @relation("UserFolders")
  files         File[]    @relation("UserFiles")
}

model Folder {
  id          String    @id @default(cuid())
  name        String
  ownerId     String
  owner       User      @relation("UserFolders", fields: [ownerId], references: [id])
  parentId    String?   // Nullable for root folders
  parent      Folder?   @relation("ParentFolder", fields: [parentId], references: [id])
  subfolders  Folder[]  @relation("ParentFolder")
  files       File[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model File {
  id          String    @id @default(cuid())
  name        String
  type        String    // e.g., "image/png", "application/pdf"
  size        Int       // File size in bytes
  ownerId     String
  owner       User      @relation("UserFiles", fields: [ownerId], references: [id])
  folderId    String?   // Nullable for files not in folders (e.g., root files)
  folder      Folder?   @relation(fields: [folderId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  url         String    // URL for file storage reference (e.g., S3, local path)
}